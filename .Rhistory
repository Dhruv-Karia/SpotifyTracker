)
page_two <- tabPanel(
"temp2",
sidebarLayout(
sidebarPanel(
h2("Customize graph")
),
mainPanel(
h1("Temp Title")
)
)
)
ui <- navbarPage(
"Midwest Population Data",
page_one,
page_two
)
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
ggplot(state, aes(fill = race, y = population_by_race, x = state)) +
geom_bar(position = "stack", stat = "identity") +
ggtitle("Midwest States vs Population By Race") +
xlab("State") + ylab("Population By Race")
ggplot(state, aes(fill = race, y = "population_by_race", x = state)) +
geom_bar(position = "stack", stat = "identity") +
ggtitle("Midwest States vs Population By Race") +
xlab("State") + ylab("Population By Race")
ggplot(state, aes(fill = race, y = population_by_race, x = state)) +
geom_bar(position = "stack", stat = "identity") +
ggtitle("Midwest States vs Population By Race") +
xlab("State") + ylab("Population By Race")
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
# Load midwest dataframe
mw <- midwest
# Create a population table by total
total_pop_state <- mw %>%
group_by(state) %>%
summarize("White" = sum(popwhite),
"Black" = sum(popblack),
"Native American" = sum(popamerindian),
"Asian" = sum(popasian),
"Other" = sum(popother)) %>%
gather(race, population_by_race, -state)
# Create a population table by percent
perc_state <- mw %>%
group_by(state) %>%
summarize("White" = mean(percwhite),
"Black" = mean(percblack),
"Native American" = mean(percamerindan),
"Asian" = mean(percasian),
"Other" = mean(percother)) %>%
gather(race, perc_by_race, -state)
# Join both tables
state <- full_join(perc_state, total_pop_state)
# Define UI
page_one <- tabPanel(
"temp1",
sidebarLayout(
sidebarPanel(
h2("Customize graph"),
radioButtons(
inputId = "radio",
label = "Change y sort",
choices = list("Total Population" = population_by_race,
"Percent of Population" = perc_by_race)
)
),
mainPanel(
h1("Temp Title"),
plotOutput(
outputId = "barchart"
)
)
)
)
page_two <- tabPanel(
"temp2",
sidebarLayout(
sidebarPanel(
h2("Customize graph")
),
mainPanel(
h1("Temp Title")
)
)
)
ui <- navbarPage(
"Midwest Population Data",
page_one,
page_two
)
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
df <- data.frame(A = 1:10, B = 11:20)
View(df)
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
View(mw)
View(df)
View(state)
library(scatterD3)
scatterD3(data = mw, x = perchsd, y = percollege, lab = county, col_var = state,
xlab = "X axis label", ylab = "Y axis label", col_lab = "State")
scatterD3(data = mw, x = mw$perchsd, y = mw$percollege, lab = county, col_var = state,
xlab = "X axis label", ylab = "Y axis label", col_lab = "State")
scatterD3(data = mw, x = perchsd, y = percollege)
scatterD3(data = mw, x = as.numeric(perchsd), y = as.numeric(percollege))
scatterD3(data = mw, x = perchsd, y = percollege, lab = county, col_var = state,
xlab = "X axis label", ylab = "Y axis label", col_lab = "State")
scatterD3(data = midwest, x = perchsd, y = percollege, lab = county, col_var = state,
xlab = "X axis label", ylab = "Y axis label", col_lab = "State")
is.vector(mw$perchsd)
scatterD3(x = mw$perchsd, y = mw$percollege, lab = county, col_var = state,
xlab = "X axis label", ylab = "Y axis label", col_lab = "State")
scatterD3(x = mw$perchsd, y = mw$percollege, lab = mw$county, col_var = mw$state,
xlab = "X axis label", ylab = "Y axis label", col_lab = "State")
View(scatterD3)
scatterD3(x = mw$perchsd, y = mw$percollege, data = mw, lab = county, col_var = state,
xlab = "X axis label", ylab = "Y axis label", col_lab = "State")
scatterD3(x = perchsd, y = percollege, data = mw, lab = county, col_var = state,
xlab = "X axis label", ylab = "Y axis label", col_lab = "State")
scatterD3(x = mw$perchsd, y = mw$percollege, lab = mw$county,
col_var = mw$state, col_lab = "State",
xlab = "X axis label", ylab = "Y axis label")
scatterD3(x = mw$perchsd, y = mw$percollege, lab = mw$county,
col_var = mw$state, col_lab = "State",
xlab = x, ylab = "Y axis label")
scatterD3(x = mw$perchsd, y = mw$percollege, lab = mw$county,
col_var = mw$state, col_lab = "State",
xlab = "Percent w/ HSD", ylab = "Percent w/ CD")
# Scatter plot
scatterD3(x = mw$perchsd, y = mw$percollege,
col_var = mw$state, col_lab = "State",
xlab = "Percent w/ HSD", ylab = "Percent w/ CD")
scatterD3(x = mw$perchsd, y = mw$percollege, point_opacity = 0.5,
col_var = mw$state, col_lab = "State",
xlab = "Percent w/ HSD", ylab = "Percent w/ CD")
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
# Load libraries
library(shiny)
library(dplyr)
library(ggplot2)
library(tidyr)
library(scatterD3)
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='maxmiles', token='070B902B716B8966D6BD1C7AC7DC937B', secret='kc+zMulj4RT3AMyS/uF1lEjjArKI2Gwh1Rjc+Bf3')
shiny::runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
install.packages("RColorBrewer")
library(RColorBrewer)
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
ggplot(state, aes(fill = race, y = eval(parse(text=input$radio)), x = state)) +
geom_bar(position = "stack", stat = "identity") +
scale_color_brewer("Set1") +
ggtitle("Midwest States vs Population By Race") +
xlab("State") + ylab("Population")
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
library(stringr)
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
identifier <- c("percollege", "perchsd", "percbelowpoverty", "percadultpoverty",
"percchildbelowpovert", "percelderlypoverty")
label <- c("Percent college educated", "Percent with high school diploma",
"Percent in poverty", "Percent of adults in poverty",
"Percent of children in poverty", "Percent of elderly in poverty")
temp <- data.frame(identifier, label)
View(temp)
tmp <- data.frame(c("Percent college educated", "percollege"),
c("Percent with high school diploma" = "perchsd"),
c("Percent in poverty" = "percbelowpoverty"),
c("Percent of adults in poverty" = "percadultpoverty"),
c("Percent of children in poverty" = "percchildbelowpovert"),
c("Percent of elderly in poverty" = "percelderlypoverty"))
View(tmp)
tmp <- data.frame(c("Percent college educated", "percollege"),
c("Percent with high school diploma", "perchsd"),
c("Percent in poverty", "percbelowpoverty"),
c("Percent of adults in poverty", "percadultpoverty"),
c("Percent of children in poverty", "percchildbelowpovert"),
c("Percent of elderly in poverty", "percelderlypoverty"))
View(tmp)
tmp <- data.frame("Percent college educated" = c("percollege"),
"Percent with high school diploma" = c("perchsd"),
"Percent in poverty" = c("percbelowpoverty"),
"Percent of adults in poverty" = c("percadultpoverty"),
"Percent of children in poverty" = c("percchildbelowpovert"),
"Percent of elderly in poverty" = c("percelderlypoverty"))
View(tmp)
tmp <- data.frame("percollege" = c("Percent college educated"),
"perchsd" = c("Percent with high school diploma"),
"percbelowpoverty" = c("Percent in poverty"),
"percadultpoverty" = c("Percent of adults in poverty"),
"percchildbelowpovert" = c("Percent of children in poverty"),
"percelderlypoverty" = c("Percent of elderly in poverty"))
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
shiny::runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/a6-maxmiles')
shiny::runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/final-project-maxmiles/shinyapp')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/final-project-maxmiles/shinyapp')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/final-project-maxmiles/shinyapp')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/final-project-maxmiles/shinyapp')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/final-project-maxmiles/shinyapp')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/final-project-maxmiles/shinyapp')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/final-project-maxmiles/shinyapp')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/final-project-maxmiles/shinyapp')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/final-project-maxmiles/shinyapp')
# Load libraries
library(dplyr)
library(ggplot2)
library(plotly)
library(leaflet)
library(styler)
library(lintr)
library(tsibble)
library(tidyr)
# Source the data
data <- read.csv("../data/bias_cleaned.csv", stringsAsFactors = FALSE)
# Source the data
data <- read.csv("../data/bias_cleaned.csv", stringsAsFactors = FALSE)
shiny::runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/final-project-maxmiles/shinyapp')
# Temp
plot_by_year <- ggplot(data, aes(Bias.Type, Instances)) +
theme_bw() +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(
size = 10,
angle = 90,
hjust = 1,
vjust = 0.5
)) +
ggtitle("Graph of Bias Incident Reports By Type") +
xlab("Bias Groups") + ylab("Total Bias Incidents Reported") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~year)
# Source the data
data <- read.csv("../data/bias_cleaned.csv", stringsAsFactors = FALSE)
# Source the data
data <- read.csv("../../data/bias_cleaned.csv", stringsAsFactors = FALSE)
data <- read.csv("../data/bias_cleaned.csv", stringsAsFactors = FALSE)
shiny::runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/final-project-maxmiles/shinyapp')
neigh_grouped <- data %>%
mutate(Count = 1) %>%
group_by(Neighborhood) %>%
summarize(Instances = sum(Count))
neigh_grouped$location <-
paste0(neigh_grouped$Neighborhood, ", SEATTLE, WA")
scrape <- function(adr = NULL) {
if (suppressWarnings(is.null(adr)))
return(data.frame())
tryCatch(
o <- jsonlite::fromJSON(
gsub("\\@addr\\@", gsub("\\s+", "\\%20", adr),
"http://nominatim.openstreetmap.org/search/@addr@?format=json&addressdetails=0&limit=1")
), error = function(c) return(data.frame())
)
if (length(o) == 0) return(data.frame())
return(data.frame(lon = as.numeric(o$lon), lat = as.numeric(o$lat)))
}
only_location <- select(neigh_grouped, location)
final <- apply(only_location, 1, scrape)
final_conv <-
data.frame(matrix(unlist(final), nrow = length(final), byrow = T))
df <- merge(neigh_grouped, final_conv, by = 0)
df <- df[-1,]
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/final-project-maxmiles/shinyapp')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/final-project-maxmiles/shinyapp')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/final-project-maxmiles/shinyapp')
runApp('C:/Users/maxbe/OneDrive - UW/INFO 201/final-project-maxmiles/shinyapp')
install.packages("spotifyr")
library(spotifyr)
library(spotifyr)
library(spotifyr)
devtools::install_github('charlie86/spotifyr')
install.packages('spotifyr')
library(spotifyr)
library(devtools)
install.packages()
library(devtools)
devtools::install_github("charlie86/spotifyr")
library(spotifyr)
library(spotifyr)
library(tidyverse)
library(knitr)
library(lubridate)
source("secret.R")
access_token <- get_spotify_access_token()
get_my_recently_played(limit = 25) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at) %>%
kable()
install.packages("magrittr")
install.packages("magrittr")
library(spotifyr)
library(tidyverse)
library(knitr)
library(lubridate)
source("secret.R")
access_token <- get_spotify_access_token()
get_my_recently_played(limit = 25) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at) %>%
kable()
Sys.setenv(SPOTIFY_CLIENT_ID = '8be04c748ce54d54b15a98622de414e7')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '82581c962f4843c7bc6764a4174b5f10')
library(spotifyr)
library(tidyverse)
library(knitr)
library(lubridate)
source("secret.R")
access_token <- get_spotify_access_token()
get_my_recently_played(limit = 25) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at) %>%
kable()
source("secret.R")
access_token <- get_spotify_access_token()
get_my_recently_played(limit = 25) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at) %>%
kable()
recents <- get_my_recently_played(limit = 25) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at) %>%
kable()
recents <- get_my_recently_played(limit = 25) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
View(recents)
View(recents)
??spotifyr
shiny::runApp('R/SpotifyTracker')
runApp('R/SpotifyTracker')
runApp('R/SpotifyTracker')
page_one <-
tabPanel(
"temp1"
)
page_two <-
tabPanel(
"temp2"
)
runApp('R/SpotifyTracker')
recents <- get_my_recently_played(limit = 100) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
recents <- get_my_recently_played(limit = 50) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
View(recents)
View(recents)
recents <- get_my_recently_played(limit = 70) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
recents <- get_my_recently_played(limit = 60) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
recents <- get_my_recently_played(limit = 55) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
recents <- get_my_recently_played(limit = 51) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
recents <- get_my_recently_played(limit = 50) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
set_my_volume(10)
library(spotifyr)
library(spotifyr)
library(tidyverse)
library(knitr)
library(lubridate)
set_my_volume(10)
source("secret.R")
access_token <- get_spotify_access_token()
recents <- get_my_recently_played(limit = 50) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
View(recents)
set_my_volume(10)
source("secret.R")
access_token <- get_spotify_access_token()
source("../secret.R")
source("./secret.R")
source("secret.R")
source("secret.R")
access_token <- get_spotify_access_token()
set_my_volume(10)
source("secret.R")
shiny::runApp('R/SpotifyTracker')
runApp('R/SpotifyTracker')
runApp('R/SpotifyTracker')
# Load libraries
library(shiny)
library(dplyr)
library(ggplot2)
library(tidyr)
library(scatterD3)
library(stringr)
library(spotifyr)
library(devtools)
# Source UI and server
source("app_ui.R")
source("app_server.R")
source("secret.R")
source("scripts/chart1.R")
source("scripts/chart2.R")
# Load libraries
library(shiny)
library(dplyr)
library(ggplot2)
library(tidyr)
library(scatterD3)
library(stringr)
library(spotifyr)
library(devtools)
# Source UI and server
source("app_ui.R")
source("app_server.R")
source("secret.R")
source("./scripts/chart1.R")
source("./scripts/chart2.R")
setwd("~/R/SpotifyTracker")
# Load libraries
library(shiny)
library(dplyr)
library(ggplot2)
library(tidyr)
library(scatterD3)
library(stringr)
library(spotifyr)
library(devtools)
# Source UI and server
source("app_ui.R")
source("app_server.R")
source("secret.R")
source("./scripts/chart1.R")
source("./scripts/chart2.R")
runApp()
