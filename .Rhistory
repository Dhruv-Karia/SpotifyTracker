tabPanel(
"temp1"
)
page_two <-
tabPanel(
"temp2"
)
runApp('R/SpotifyTracker')
recents <- get_my_recently_played(limit = 100) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
recents <- get_my_recently_played(limit = 50) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
View(recents)
View(recents)
recents <- get_my_recently_played(limit = 70) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
recents <- get_my_recently_played(limit = 60) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
recents <- get_my_recently_played(limit = 55) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
recents <- get_my_recently_played(limit = 51) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
recents <- get_my_recently_played(limit = 50) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
set_my_volume(10)
library(spotifyr)
library(spotifyr)
library(tidyverse)
library(knitr)
library(lubridate)
set_my_volume(10)
source("secret.R")
access_token <- get_spotify_access_token()
recents <- get_my_recently_played(limit = 50) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
View(recents)
set_my_volume(10)
source("secret.R")
access_token <- get_spotify_access_token()
source("../secret.R")
source("./secret.R")
source("secret.R")
source("secret.R")
access_token <- get_spotify_access_token()
set_my_volume(10)
source("secret.R")
shiny::runApp('R/SpotifyTracker')
runApp('R/SpotifyTracker')
runApp('R/SpotifyTracker')
# Load libraries
library(shiny)
library(dplyr)
library(ggplot2)
library(tidyr)
library(scatterD3)
library(stringr)
library(spotifyr)
library(devtools)
# Source UI and server
source("app_ui.R")
source("app_server.R")
source("secret.R")
source("scripts/chart1.R")
source("scripts/chart2.R")
# Load libraries
library(shiny)
library(dplyr)
library(ggplot2)
library(tidyr)
library(scatterD3)
library(stringr)
library(spotifyr)
library(devtools)
# Source UI and server
source("app_ui.R")
source("app_server.R")
source("secret.R")
source("./scripts/chart1.R")
source("./scripts/chart2.R")
setwd("~/R/SpotifyTracker")
# Load libraries
library(shiny)
library(dplyr)
library(ggplot2)
library(tidyr)
library(scatterD3)
library(stringr)
library(spotifyr)
<<<<<<< HEAD
devtools::install_github("charlie86/spotifyr")
shiny::runApp()
install.packages("shiny")
install.packages("shiny")
shiny::runApp()
runApp()
runApp()
# Define server
server <- function(input, output) {
# Create a scatter plot of Spotify data
output$scatter <- renderScatterD3({
id <- data.frame("percollege" = c("Percent college educated"),
"perchsd" = c("Percent with high school diploma"),
"percbelowpoverty" = c("Percent in poverty"),
"percadultpoverty" = c("Percent of adults in poverty"),
"percchildbelowpovert" = c("Percent of children in poverty"),
"percelderlypoverty" = c("Percent of elderly in poverty"))
varX <- eval(parse(text=paste0("mw$", input$selectX)))
varY <- eval(parse(text=paste0("mw$", input$selectY)))
plot <- scatterD3(
x = varX, y = varY, point_opacity = 0.5, col_var = mw$state,
col_lab = "State", xlab = id[[input$selectX]], ylab = id[[input$selectY]],
axes_font_size = "160%",
tooltip_text = paste0("<strong>County: </strong>",
str_to_title(mw$county), ", ", mw$state, "<br>",
"<strong>", id[[input$selectX]],
": </strong>", varX, "<br>",
"<strong>", id[[input$selectY]],
": </strong>", varY)
)
return(plot)
})
}
runApp()
setwd("C:/Users/dhruv/Desktop/SpotifyTracker")
=======
library(devtools)
# Source UI and server
source("app_ui.R")
source("app_server.R")
source("secret.R")
source("./scripts/chart1.R")
source("./scripts/chart2.R")
>>>>>>> ee9ef280dcd0350a123caf98fd96647d4df888a3
runApp()
page_one <-
tabPanel(
"Spotify Wrapped"
# Top 5 genres
# Top 5 songs
# Minutes listened in last 12 months
)
page_one <-
tabPanel(
"Spotify Wrapped"
# Top 5 genres
# Top 5 songs
# Minutes listened in last 12 months
)
source("scripts/chart2.R")
page_two <- tabPanel(
"ScatterD3 Graph",
sidebarLayout(
sidebarPanel(
h2("Customize graph:"),
selectInput(
inputId = "selectX",
"X Axis Variable:",
choices = droplist
),
selectInput(
inputId = "selectY",
"Y Axis Variable:",
choices = droplist,
selected = "Energy"
)
),
mainPanel(
scatterD3Output(
outputId = "scatter"
)
)
)
)
ui <- fluidPage(
source("style.css"),
navbarPage(
"Spotify Tracker",
page_one,
page_two
)
)
shiny::runApp()
runApp()
shiny::runApp()
library(spotifyr)
library(tidyverse)
library(knitr)
library(lubridate)
source("scripts/secret.R")
access_token <- get_spotify_access_token()
recents <- get_my_recently_played(limit = 50) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
playlists <- get_my_playlists(limit = 50, offset = 0,
authorization = get_spotify_authorization_code(),
include_meta_info = FALSE)
get_track <- function(id)
{
tracks <- get_playlist_tracks(id, fields = NULL, limit = 100,
offset = 0, market = NULL,
authorization = get_spotify_access_token(),
include_meta_info = FALSE)
}
all_tracks_list <- lapply(playlists$id, get_track)
all_tracks <- as.data.frame(do.call(rbind, all_tracks_list))
get_analysis <- function(track_id)
{
analysis <- get_track_audio_features(track_id,
authorization = get_spotify_access_token())
}
tracks_list <- lapply(all_tracks$track.id, get_analysis)
track_features <- as.data.frame(do.call(rbind, tracks_list))
total_tracks <- cbind(all_tracks, track_features)
summary <- summarize(total_tracks, danceability = mean(danceability),
energy = mean(energy),
speechiness = mean(speechiness), acousticness = mean(acousticness),
instrumentalness = mean(instrumentalness),
valence = mean(valence))
top3 <- abs(t(apply(summary[-1], 1, function(x) head(sort(-x), 3))))
top3_names <- colnames(top3)
words <- list()
for(i in 1:length(top3_names)){
if("danceability" == top3_names[i])
{
words[[i]] <- "Dougie"
}
if("energy" == top3_names[i])
{
words[[i]] <- "Bubbly"
}
if("speechiness" == top3_names[i])
{
words[[i]] <- "Rap God"
}
if("acousticness" == top3_names[i])
{
words[[i]] <- "Natural"
}
if("instrumentalness" == top3_names[i])
{
words[[i]] <- "Word-Girl"
}
if("acousticness" == top3_names[i])
{
words[[i]] <- "On Cloud Nine"
}
if("valence" == top3_names[i])
{
words[[i]] <- "Jolly"
}
}
library(spotifyr)
library(tidyverse)
library(knitr)
library(lubridate)
source("scripts/secret.R")
access_token <- get_spotify_access_token()
recents <- get_my_recently_played(limit = 50) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
playlists <- get_my_playlists(limit = 50, offset = 0,
authorization = get_spotify_authorization_code(),
include_meta_info = FALSE)
get_track <- function(id)
{
tracks <- get_playlist_tracks(id, fields = NULL, limit = 100,
offset = 0, market = NULL,
authorization = get_spotify_access_token(),
include_meta_info = FALSE)
}
all_tracks_list <- lapply(playlists$id, get_track)
all_tracks <- as.data.frame(do.call(rbind, all_tracks_list))
get_analysis <- function(track_id)
{
analysis <- get_track_audio_features(track_id,
authorization = get_spotify_access_token())
}
tracks_list <- lapply(all_tracks$track.id, get_analysis)
track_features <- as.data.frame(do.call(rbind, tracks_list))
total_tracks <- cbind(all_tracks, track_features)
summary <- summarize(total_tracks, danceability = mean(danceability),
energy = mean(energy),
speechiness = mean(speechiness), acousticness = mean(acousticness),
instrumentalness = mean(instrumentalness),
valence = mean(valence))
top3 <- abs(t(apply(summary[-1], 1, function(x) head(sort(-x), 3))))
top3_names <- colnames(top3)
words <- list()
for(i in 1:length(top3_names)){
if("danceability" == top3_names[i])
{
words[[i]] <- "Dougie"
}
if("energy" == top3_names[i])
{
words[[i]] <- "Bubbly"
}
if("speechiness" == top3_names[i])
{
words[[i]] <- "Rap God"
}
if("acousticness" == top3_names[i])
{
words[[i]] <- "Natural"
}
if("instrumentalness" == top3_names[i])
{
words[[i]] <- "Word-Girl"
}
if("acousticness" == top3_names[i])
{
words[[i]] <- "On Cloud Nine"
}
if("valence" == top3_names[i])
{
words[[i]] <- "Jolly"
}
}
library(spotifyr)
library(tidyverse)
library(knitr)
library(lubridate)
source("scripts/secret.R")
access_token <- get_spotify_access_token()
recents <- get_my_recently_played(limit = 50) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
playlists <- get_my_playlists(limit = 50, offset = 0,
authorization = get_spotify_authorization_code(),
include_meta_info = FALSE)
get_track <- function(id)
{
tracks <- get_playlist_tracks(id, fields = NULL, limit = 100,
offset = 0, market = NULL,
authorization = get_spotify_access_token(),
include_meta_info = FALSE)
}
all_tracks_list <- lapply(playlists$id, get_track)
all_tracks <- as.data.frame(do.call(rbind, all_tracks_list))
get_analysis <- function(track_id)
{
analysis <- get_track_audio_features(track_id,
authorization = get_spotify_access_token())
}
tracks_list <- lapply(all_tracks$track.id, get_analysis)
track_features <- as.data.frame(do.call(rbind, tracks_list))
total_tracks <- cbind(all_tracks, track_features)
summary <- summarize(total_tracks, danceability = mean(danceability),
energy = mean(energy),
speechiness = mean(speechiness), acousticness = mean(acousticness),
instrumentalness = mean(instrumentalness),
valence = mean(valence))
top3 <- abs(t(apply(summary[-1], 1, function(x) head(sort(-x), 3))))
top3_names <- colnames(top3)
words <- list()
for(i in 1:length(top3_names)){
if("danceability" == top3_names[i])
{
words[[i]] <- "Dougie"
}
if("energy" == top3_names[i])
{
words[[i]] <- "Bubbly"
}
if("speechiness" == top3_names[i])
{
words[[i]] <- "Rap God"
}
if("acousticness" == top3_names[i])
{
words[[i]] <- "Natural"
}
if("instrumentalness" == top3_names[i])
{
words[[i]] <- "Word-Girl"
}
if("acousticness" == top3_names[i])
{
words[[i]] <- "On Cloud Nine"
}
if("valence" == top3_names[i])
{
words[[i]] <- "Jolly"
}
}
library(spotifyr)
library(tidyverse)
library(knitr)
library(lubridate)
source("scripts/secret.R")
access_token <- get_spotify_access_token()
recents <- get_my_recently_played(limit = 50) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at)
playlists <- get_my_playlists(limit = 50, offset = 0,
authorization = get_spotify_authorization_code(),
include_meta_info = FALSE)
get_track <- function(id)
{
tracks <- get_playlist_tracks(id, fields = NULL, limit = 100,
offset = 0, market = NULL,
authorization = get_spotify_access_token(),
include_meta_info = FALSE)
}
all_tracks_list <- lapply(playlists$id, get_track)
all_tracks <- as.data.frame(do.call(rbind, all_tracks_list))
get_analysis <- function(track_id)
{
analysis <- get_track_audio_features(track_id,
authorization = get_spotify_access_token())
}
tracks_list <- lapply(all_tracks$track.id, get_analysis)
track_features <- as.data.frame(do.call(rbind, tracks_list))
total_tracks <- cbind(all_tracks, track_features)
summary <- summarize(total_tracks, danceability = mean(danceability),
energy = mean(energy),
speechiness = mean(speechiness), acousticness = mean(acousticness),
instrumentalness = mean(instrumentalness),
valence = mean(valence))
top3 <- abs(t(apply(summary[-1], 1, function(x) head(sort(-x), 3))))
top3_names <- colnames(top3)
words <- list()
for(i in 1:length(top3_names)){
if("danceability" == top3_names[i])
{
words[[i]] <- "Dougie"
}
if("energy" == top3_names[i])
{
words[[i]] <- "Bubbly"
}
if("speechiness" == top3_names[i])
{
words[[i]] <- "Rap God"
}
if("acousticness" == top3_names[i])
{
words[[i]] <- "Natural"
}
if("instrumentalness" == top3_names[i])
{
words[[i]] <- "Word-Girl"
}
if("acousticness" == top3_names[i])
{
words[[i]] <- "On Cloud Nine"
}
if("valence" == top3_names[i])
{
words[[i]] <- "Jolly"
}
}
print(words[[2]])
print(words[[4]])
print(words[[3]])
return(words)
print(words)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Create a scatter plot of Spotify data
output$scatter <- renderScatterD3({
source("scripts/chart2.R")
varX <- eval(parse(text=paste0("tracks$", tolower(input$selectX))))
varY <- eval(parse(text=paste0("tracks$", tolower(input$selectY))))
plot <- scatterD3(
x = varX, y = varY, point_opacity = 0.5, col_var = tracks$Explicit,
xlab = str_to_title(input$selectX), ylab = str_to_title(input$selectY),
axes_font_size = "160%", col_lab = "Explicit",
tooltip_text = paste0("<strong>Track: </strong>",
str_to_title(tracks$Track), "<br>",
"<strong>", input$selectX,
": </strong>", varX, "<br>",
"<strong>", input$selectY,
": </strong>", varY)
)
return(plot)
})
runApp()
runApp()
runApp()
paste0("hello", "my")
paste("hello", "my")
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
